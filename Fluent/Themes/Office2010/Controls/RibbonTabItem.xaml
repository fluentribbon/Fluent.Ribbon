<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:pr="clr-namespace:Fluent.Controls.Primitives"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <Style x:Key="RibbonTabItemStyle"
           TargetType="{x:Type Fluent:RibbonTabItem}">
        <Style.Triggers>
            <Trigger Property="Group" Value="{x:Null}">
                <Setter Property="BorderBrush" Value="{DynamicResource RibbonTopBorderBrush}" />
            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TabItemFontBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Indent" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TabItemSelectedFontBrush}" />
        <Setter Property="BorderBrush" Value="{Binding Group.BorderBrush, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsMinimized" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay, FallbackValue=False}" />
        <Setter Property="IsOpen" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay, FallbackValue=True}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTabItem}">
                    <Grid Margin="0,7,0,0">
                        <pr:RibbonTabItemBorder x:Name="Border"
                                                Background="Transparent"
                                                BorderThickness="1"
                                                BorderBrush="Transparent"
                                                InnerBorderBrush="{DynamicResource ActiveTabBackgroundBrush}"
                                                CornerRadius="2">
                            <Border x:Name="PART_ContentContainer"
                                    HorizontalAlignment="Stretch"
                                    Margin="6,2,4,0"
                                    VerticalAlignment="Stretch"
                                    Padding="15,0,0,0"
                                    Grid.ColumnSpan="1">
                                <ContentPresenter x:Name="contentPresenter"
                                                  AutomationProperties.Name="{TemplateBinding Header}"
                                                  AutomationProperties.AutomationId="{TemplateBinding Name}"
                                                  Content="{TemplateBinding Header}"
                                                  Margin="0, -3, 0,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Height="Auto" />
                            </Border>
                        </pr:RibbonTabItemBorder>
                        <Grid x:Name="separatorGrid"
                              Visibility="Collapsed"
                              HorizontalAlignment="Right"
                              Margin="0,0,-1,0"
                              Width="2">
                            <Rectangle x:Name="separatorRectangle1"
                                       Fill="{DynamicResource RibbonTopBorderBrush}"
                                       Stroke="{DynamicResource RibbonTopBorderBrush}"
                                       Margin="0,0,1,0"
                                       HorizontalAlignment="Right"
                                       Width="1"
                                       Opacity="1"
                                       Visibility="Visible">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#E5FFFFFF" Offset="0.382" />
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="separatorRectangle2"
                                       Fill="{DynamicResource ActiveTabBackgroundBrush}"
                                       Stroke="{DynamicResource ActiveTabBackgroundBrush}"
                                       HorizontalAlignment="Right"
                                       Margin="0"
                                       Width="1"
                                       Opacity="1"
                                       Visibility="Visible">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#BFFFFFFF" Offset="0.329" />
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>

                        <Border x:Name="border3"
                                Margin="1,0"
                                BorderThickness="1,0"
                                Grid.ColumnSpan="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#CCFFFFFF"
                                                  Offset="0" />
                                    <GradientStop Offset="1"
                                                  Color="#7FFFFFFF" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border x:Name="border4"
                                    BorderBrush="{Binding Group.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderThickness="1,0">
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0" />
                                        <GradientStop Color="#00000000" Offset="0.981" />
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border Background="{Binding Group.Background, RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="0"
                                        Margin="0">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#59000000"
                                                          Offset="0" />
                                            <GradientStop Color="#00000000"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Rectangle x:Name="rectangle4"
                                               Fill="#3FD2D2D2"
                                               StrokeThickness="0">
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="#7F000000"
                                                              Offset="0" />
                                                <GradientStop Color="#00000000"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasRightGroupBorder" Value="False" />
                                <Condition Property="HasLeftGroupBorder" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="border3" Value="1,0,0,0" />
                            <Setter Property="BorderThickness" TargetName="border4" Value="1,0,0,0" />
                            <Setter Property="Margin" TargetName="rectangle4" Value="0" />
                            <Setter Property="Margin" TargetName="border3" Value="1,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder" Value="False" />
                                <Condition Property="HasRightGroupBorder" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="border4" Value="0,0,1,0" />
                            <Setter Property="BorderThickness" TargetName="border3" Value="0,0,1,0" />
                            <Setter Property="Margin" TargetName="rectangle4" Value="0" />
                            <Setter Property="Margin" TargetName="border3" Value="0,0,1,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder" Value="False" />
                                <Condition Property="HasRightGroupBorder" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="border4" Value="0,0,0,0" />
                            <Setter Property="BorderThickness" TargetName="border3" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="rectangle4" Value="0" />
                            <Setter Property="Margin" TargetName="border3" Value="0" />
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                                <Condition Property="IsMinimized" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="RenderInnerBorder"
                                    Value="True" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMinimized" Value="False" />
                                <Condition Property="Fluent:RibbonTabControl.HighlightSelectedItem" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ActiveTabBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="Group" Value="{x:Null}">
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="separatorGrid" Value="-1,0,0,1" />
                            <Setter Property="Visibility" TargetName="border_Copy3" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="rectangle3" Value="Collapsed" />-->
                        </Trigger>
                        <Trigger Property="IsSeparatorVisible" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="separatorGrid"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>