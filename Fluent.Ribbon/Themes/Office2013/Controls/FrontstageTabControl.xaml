<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Fluent="clr-namespace:Fluent"
        xmlns:Converters="clr-namespace:Fluent.Converters">

    <ControlTemplate x:Key="FrontstageControlTemplate" TargetType="{x:Type Fluent:FrontstageTabControl}">
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}"
                        BasedOn="{StaticResource ScrollBarWhite}" />
                <Style x:Key="{x:Type Fluent:DropDownButton}" TargetType="{x:Type Fluent:DropDownButton}"
                        BasedOn="{StaticResource DropDownButtonBackstageStyle}" />
                <Style x:Key="{x:Type Fluent:ComboBox}" TargetType="{x:Type Fluent:ComboBox}"
                        BasedOn="{StaticResource ComboBoxBackstageStyle}" />
                <Style x:Key="{x:Type Fluent:Spinner}" TargetType="{x:Type Fluent:Spinner}"
                        BasedOn="{StaticResource SpinnerBackstageStyle}" />
                <Style TargetType="{x:Type Fluent:SeparatorTabItem}"
                        BasedOn="{StaticResource BackstageSeparatorTabItemStyle}" />
                <Storyboard x:Key="OnIsOpenTrueStoryboard">
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                            Storyboard.TargetName="grid">
                        <EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
                        <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0">
                            <EasingThicknessKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseInOut" />
                            </EasingThicknessKeyFrame.EasingFunction>
                        </EasingThicknessKeyFrame>
                    </ThicknessAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="OnIsOpenFalseStoryboard">
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                            Storyboard.TargetName="grid">
                        <EasingThicknessKeyFrame KeyTime="0" Value="0" />
                        <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="-30,0,0,0">
                            <EasingThicknessKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseInOut" />
                            </EasingThicknessKeyFrame.EasingFunction>
                        </EasingThicknessKeyFrame>
                    </ThicknessAnimationUsingKeyFrames>
                </Storyboard>
            </ResourceDictionary>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="342" Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid VerticalAlignment="Stretch" Background="{DynamicResource RibbonThemeColorBrush}">
                <Border Padding="15,25">
                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto"
                            Content="{TemplateBinding LeftContent}"></ContentPresenter>
                </Border>
            </Grid>
            <Grid Height="Auto" Grid.Column="1" Background="{DynamicResource BackstageBackgroundBrush}">
                <Grid.Margin>
                    <MultiBinding Converter="{x:Static Converters:StaticConverters.ThicknessConverter}">
                        <Binding Source="0" />
                        <Binding RelativeSource="{RelativeSource Self}" Path="(Fluent:RibbonProperties.TitleBarHeight)" />
                        <Binding Source="0" />
                        <Binding Source="0" />
                    </MultiBinding>
                </Grid.Margin>
                <Border Padding="33,16">
                    <ContentPresenter x:Name="PART_SelectedContentHost" HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" Height="Auto" Grid.Column="1"
                            Content="{TemplateBinding RightContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger
                    Binding="{Binding IsOpen, RelativeSource={RelativeSource AncestorType={x:Type Fluent:Backstage}}}"
                    Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="IsOpenBeginStoryboard" Storyboard="{StaticResource OnIsOpenTrueStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="IsOpenBeginStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger
                    Binding="{Binding IsOpen, RelativeSource={RelativeSource AncestorType={x:Type Fluent:Backstage}}}"
                    Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="IsClosedBeginStoryboard"
                            Storyboard="{StaticResource OnIsOpenFalseStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="IsClosedBeginStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<Style x:Key="BackstageStyle" TargetType="{x:Type customControls:FrontstageTabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultFontBrush}" />
        <Setter Property="Template" Value="{DynamicResource BackstageControlTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Backstage}}, FallbackValue=Red}" />
        <Setter Property="ItemsPanelBackground" Value="{DynamicResource BackstagePanelBackgroundBrush}" />
    </Style>-->
</ResourceDictionary>