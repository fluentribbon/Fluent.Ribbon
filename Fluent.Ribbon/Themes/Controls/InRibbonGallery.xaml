<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:FluentHelpers="clr-namespace:Fluent.Helpers"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.InRibbonGallery.ToggleButton.Header">
        <Fluent:TwoLineLabel HorizontalAlignment="Center"
                             VerticalAlignment="Stretch"
                             HasGlyph="True"
                             Text="{Binding}">
            <Fluent:TwoLineLabel.Style>
                <Style TargetType="Fluent:TwoLineLabel"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.TwoLineLabel}">
                    <Setter Property="HasTwoLines" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=Fluent:IRibbonControl}}" Value="Middle">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=Fluent:IRibbonControl}}" Value="Small">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSimplified, RelativeSource={RelativeSource AncestorType=Fluent:ISimplifiedRibbonControl}}" Value="True">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Fluent:TwoLineLabel.Style>
        </Fluent:TwoLineLabel>
    </DataTemplate>

    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.InRibbonGallery.ToggleButton.Header.Simplified">
        <Fluent:TwoLineLabel HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             HasGlyph="False"
                             HasTwoLines="False"
                             Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.InRibbonGalleryToggleButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelText}" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource Fluent.Ribbon.DataTemplates.InRibbonGallery.ToggleButton.Header}" />
        <Setter Property="Height" Value="68" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGalleryToggleButton}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Large" />
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Medium" />
                <Setter Property="HeaderTemplate" Value="{DynamicResource Fluent.Ribbon.DataTemplates.InRibbonGallery.ToggleButton.Header.Simplified}" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Padding" Value="6 2 2 2" />
                <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGallery.ToggleButton.Simplified}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="Size" Value="Small" />
                </MultiTrigger.Conditions>
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGalleryToggleButton"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
            <Grid>
                <StackPanel x:Name="stackPanel"
                            Orientation="Vertical">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          CustomSize="{Binding Path=(Fluent:RibbonProperties.CustomIconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />

                    <ContentControl x:Name="PART_HeaderContentHost"
                                    Margin="2 -2 2 2"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False" />
                </StackPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="PART_HeaderContentHost" Property="Width" Value="10" />
                <Setter TargetName="iconImage" Property="Margin" Value="0" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="PART_HeaderContentHost" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="border" Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="iconImage" Property="Margin" Value="1 2 2 2" />
                <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="stackPanel" Property="Width" Value="Auto" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGallery.ToggleButton.Simplified"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="stackPanel"
                  Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="iconImageGrid"
                      Grid.Column="0"
                      Margin="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          CustomSize="{Binding Path=(Fluent:RibbonProperties.CustomIconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Border x:Name="iconImageBorder"
                            Width="{Binding ActualWidth, ElementName=iconImage}"
                            Height="{Binding ActualHeight, ElementName=iconImage}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                            BorderThickness="1"
                            Visibility="Collapsed" />
                </Grid>

                <ContentControl x:Name="PART_HeaderContentHost"
                                Grid.Column="1"
                                Margin="2 0 0 0"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Focusable="False" />

                <Fluent:TwoLineLabel x:Name="controlLabel2"
                                     Grid.Column="2"
                                     Margin="2 0 0 0"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     HasGlyph="True"
                                     HasTwoLines="False"
                                     Text="" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Small" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Middle" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Large" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="stackPanel" Property="Margin" Value="4 0 1 0" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
                <Setter TargetName="controlLabel2" Property="Opacity" Value="0.5" />
                <Setter TargetName="iconImageBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Control.Disabled.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.InRibbonGalleryButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:ToggleButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentControl x:Name="PART_HeaderContentHost"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGallery.VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    Background="{DynamicResource Fluent.Ribbon.Brushes.ScrollBar.Background}" />
            <RepeatButton x:Name="repeatButton"
                          Style="{DynamicResource Fluent.Ribbon.Styles.VerticalScrollBarLineButton}"
                          Grid.Row="0"
                          Height="17"
                          VerticalAlignment="Top"
                          Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                          BorderThickness="1 1 0 1"
                          Command="ScrollBar.LineUpCommand"
                          Content="{DynamicResource Fluent.Ribbon.Values.Arrow.Up}" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true"
                   ViewportSize="{TemplateBinding ViewportSize}">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource Fluent.Ribbon.Styles.ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource Fluent.Ribbon.Styles.VerticalScrollBarThumb}"
                           RenderTransformOrigin="0.5,0.5" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource Fluent.Ribbon.Styles.ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton x:Name="repeatButton1"
                          Style="{DynamicResource Fluent.Ribbon.Styles.VerticalScrollBarLineButton}"
                          Grid.Row="2"
                          Height="17"
                          Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                          BorderThickness="1 1 0 1"
                          Command="ScrollBar.LineDownCommand"
                          Content="{DynamicResource Fluent.Ribbon.Values.Arrow.Down}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="repeatButton" Property="Background" Value="{x:Null}" />
                <Setter TargetName="repeatButton1" Property="Background" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGallery.VerticalScrollBar.Simplified"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    Background="{DynamicResource Fluent.Ribbon.Brushes.ScrollBar.Background}" />
            <RepeatButton x:Name="repeatButton"
                          Style="{DynamicResource Fluent.Ribbon.Styles.VerticalScrollBarLineButton}"
                          Grid.Row="0"
                          Height="10"
                          VerticalAlignment="Top"
                          Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                          BorderThickness="1 1 0 1"
                          Command="ScrollBar.LineUpCommand"
                          Content="{DynamicResource Fluent.Ribbon.Values.Arrow.Up}" />
            <RepeatButton x:Name="repeatButton1"
                          Style="{DynamicResource Fluent.Ribbon.Styles.VerticalScrollBarLineButton}"
                          Grid.Row="1"
                          Height="10"
                          Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                          BorderThickness="1 1 0 1"
                          Command="ScrollBar.LineDownCommand"
                          Content="{DynamicResource Fluent.Ribbon.Values.Arrow.Down}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="repeatButton" Property="Background" Value="{x:Null}" />
                <Setter TargetName="repeatButton1" Property="Background" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.InRibbonGallery.ScrollBar"
           TargetType="ScrollBar">
        <Setter Property="BorderThickness" Value="1 1 0 1" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.Black}" />
        <Setter Property="Margin" Value="0 0 0 17" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGallery.VerticalScrollBar}" />
                <Setter Property="Width" Value="17" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <!--
                Set the Thumb's minimum height to 10.
                The Thumb's minimum height is half the
                value of VerticalScrollBarButtonHeightKey.
            -->
            <System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">
                10
            </System:Double>
            <!--
                Set the Thumb's minimum height to 10.
                The Thumb's minimum height is half the
                value of VerticalScrollBarButtonHeightKey.
            -->
            <System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">
                10
            </System:Double>
        </Style.Resources>
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.InRibbonGallery.ScrollBar.Simplified"
           TargetType="ScrollBar">
        <Setter Property="BorderThickness" Value="1 1 0 1" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.Black}" />
        <Setter Property="Margin" Value="0 0 0 17" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGallery.VerticalScrollBar.Simplified}" />
                <Setter Property="Width" Value="17" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGallery"
                     TargetType="{x:Type Fluent:InRibbonGallery}">
        <Grid x:Name="PART_LayoutRoot"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <Border x:Name="border"
                    Height="{TemplateBinding GalleryPanelContainerHeight}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    ClipToBounds="True">
                <Grid Background="{DynamicResource Fluent.Ribbon.Brushes.InRibbonGallery.Content.Background}">
                    <ScrollViewer x:Name="ScrollViewer"
                                  Style="{DynamicResource Fluent.Ribbon.Styles.ScrollViewer}"
                                  HorizontalScrollBarVisibility="Disabled"
                                  VerticalScrollBarVisibility="Visible"
                                  Fluent:ScrollViewerAttachedProperties.ScrollBarStyle="{DynamicResource Fluent.Ribbon.Styles.InRibbonGallery.ScrollBar}">
                        <ContentControl x:Name="PART_ContentPresenter"
                                        Focusable="False">
                            <Fluent:GalleryPanel x:Name="PART_GalleryPanel"
                                                 Filter="{TemplateBinding SelectedFilterGroups}"
                                                 GroupBy="{TemplateBinding GroupBy}"
                                                 GroupByAdvanced="{TemplateBinding GroupByAdvanced}"
                                                 IsGrouped="False"
                                                 IsItemsHost="True"
                                                 ItemContainerGenerator="{Binding ItemContainerGenerator, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemHeight="{TemplateBinding ItemHeight}"
                                                 ItemWidth="{TemplateBinding ItemWidth}"
                                                 Orientation="{TemplateBinding Orientation}" />
                        </ContentControl>
                    </ScrollViewer>

                    <Fluent:ToggleButton x:Name="PART_ExpandButton"
                                         Header="{TemplateBinding ExpandButtonContent}"
                                         Style="{DynamicResource Fluent.Ribbon.Styles.InRibbonGalleryButton}"
                                         Width="17"
                                         Height="17"
                                         Margin="0"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Bottom"
                                         BorderThickness="1 1 0 0"
                                         CanAddToQuickAccessToolBar="False"
                                         ClickMode="Press"
                                         HeaderTemplate="{TemplateBinding ExpandButtonContentTemplate}"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsDefinitive="False" />

                    <Popup x:Name="PART_Popup"
                           Grid.ColumnSpan="2"
                           VerticalAlignment="Top"
                           AllowsTransparency="True"
                           CustomPopupPlacementCallback="{x:Static FluentHelpers:PopupHelper.SimplePlacementCallback}"
                           Focusable="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Custom"
                           PlacementTarget="{Binding ElementName=PART_LayoutRoot}"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Fluent:ResizeableContentControl x:Name="PART_PopupContentControl"
                                                         MinWidth="{TemplateBinding ActualWidth}"
                                                         MinHeight="{TemplateBinding ActualHeight}"
                                                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                         IsEnabled="{TemplateBinding IsEnabled}"
                                                         ResizeMode="{TemplateBinding ResizeMode}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Border x:Name="border_"
                                                Grid.Row="0"
                                                Height="13"
                                                Background="{DynamicResource Fluent.Ribbon.Brushes.Gallery.Header.Background}"
                                                BorderBrush="{x:Null}"
                                                BorderThickness="0">
                                            <Fluent:DropDownButton x:Name="PART_FilterDropDownButton"
                                                                   Header="{TemplateBinding SelectedFilterTitle}"
                                                                   Style="{DynamicResource Fluent.Ribbon.Styles.GalleryDropDownButton}"
                                                                   Height="Auto"
                                                                   HorizontalAlignment="Left"
                                                                   VerticalAlignment="Top" />
                                        </Border>
                                        <ScrollViewer x:Name="PART_ScrollViewer"
                                                      Style="{DynamicResource Fluent.Ribbon.Styles.ScrollViewer}"
                                                      Grid.Row="1"
                                                      Margin="1"
                                                      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                                                      BorderThickness="0 0 0 1">
                                            <ContentControl x:Name="PART_PopupContentPresenter"
                                                            Content="{x:Null}"
                                                            Focusable="False" />
                                        </ScrollViewer>
                                    </Grid>
                                </Border>

                                <ContentPresenter Grid.Row="1"
                                                  VerticalAlignment="Top"
                                                  ContentSource="Menu"
                                                  Focusable="False"
                                                  KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                        </Fluent:ResizeableContentControl>
                    </Popup>
                </Grid>
            </Border>

            <Fluent:ToggleButton x:Name="PART_DropDownButton"
                                 Header="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}"
                                 Style="{DynamicResource Fluent.Ribbon.Styles.InRibbonGalleryToggleButton}"
                                 Margin="0 0 0 0"
                                 Icon="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                 MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                 LargeIcon="{Binding Path=LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                 CanAddToQuickAccessToolBar="False"
                                 ClickMode="Press"
                                 IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 IsDefinitive="False"
                                 Size="{Binding Path=Size, RelativeSource={RelativeSource TemplatedParent}}"
                                 SizeDefinition="{Binding Path=SizeDefinition, RelativeSource={RelativeSource TemplatedParent}}"
                                 Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasFilter" Value="False">
                <Setter TargetName="border_" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_DropDownButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="PART_ExpandButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_DropDownButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_LayoutRoot" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="PART_LayoutRoot" Property="VerticalAlignment" Value="Top" />
                <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom" />
                <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="IsCollapsed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_LayoutRoot" Property="HorizontalAlignment" Value="Stretch" />
                <Setter TargetName="PART_LayoutRoot" Property="VerticalAlignment" Value="Stretch" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="IsCollapsed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ExpandButton" Property="Grid.Column" Value="1" />
                <Setter TargetName="ScrollViewer" Property="Fluent:ScrollViewerAttachedProperties.ScrollBarStyle" Value="{DynamicResource Fluent.Ribbon.Styles.InRibbonGallery.ScrollBar.Simplified}" />
            </MultiTrigger>
            <Trigger Property="Menu" Value="{x:Null}">
                <Setter TargetName="PART_ScrollViewer" Property="BorderThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.InRibbonGallery.Header" />

    <Style x:Key="Fluent.Ribbon.Styles.InRibbonGallery"
           TargetType="{x:Type Fluent:InRibbonGallery}">
        <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ExpandButtonContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid x:Name="grid">
                        <Path Width="10"
                              Height="2"
                              Margin="0 2 0 0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Top"
                              Data="M0,0L1,0"
                              Stretch="Fill"
                              Stroke="{DynamicResource Fluent.Ribbon.Brushes.Black}"
                              StrokeThickness="2" />
                        <Path Style="{DynamicResource Fluent.Ribbon.Styles.Path.Arrow.UpDown}"
                              Margin="0 0 0 4"
                              VerticalAlignment="Bottom"
                              Data="{DynamicResource Fluent.Ribbon.Values.Arrow.Down}"
                              Stroke="{DynamicResource Fluent.Ribbon.Brushes.Black}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="{DynamicResource Fluent.Ribbon.Values.Default.Margin}" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGallery}" />
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="GalleryPanelContainerHeight" Value="NaN" />
                <Setter Property="Height" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>